name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - run: composer install --no-interaction --prefer-dist
      - run: npm ci
      - run: npm run test
      - run: npm run codex:checks
      - run: npm run build || echo "no build step"
      - name: Determine slug
        id: slug
        run: |
          MAIN_FILE=$(grep -RIl "Plugin Name:" --include=*.php . | head -n1)
          TEXT_DOMAIN=$(awk -F': ' '/Text Domain:/{print $2}' "$MAIN_FILE" | tr -d '\r' | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9-' '-')
          REPO_NAME=$(basename "$GITHUB_WORKSPACE")
          SLUG=${TEXT_DOMAIN:-$REPO_NAME}
          echo "slug=$SLUG" >> $GITHUB_OUTPUT
      - name: Stage plugin
        run: |
          rsync -a . "dist/${{ steps.slug.outputs.slug }}" \
            --exclude ".git*" --exclude ".github" \
            --exclude "node_modules" --exclude "tests" --exclude "cypress" --exclude "coverage" \
            --exclude "codex" --exclude "docs" --exclude ".editorconfig" --exclude ".vscode" \
            --exclude "phpunit.xml" --exclude "phpunit.xml.dist" --exclude "jest.config.*" \
            --exclude "pnpm-lock.yaml" --exclude "yarn.lock"
          (cd "dist/${{ steps.slug.outputs.slug }}" && composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader) || true
      - name: Zip
        run: |
          cd dist
          zip -r "${{ steps.slug.outputs.slug }}.zip" "${{ steps.slug.outputs.slug }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.slug.outputs.slug }}.zip
          asset_name: ${{ steps.slug.outputs.slug }}.zip
          asset_content_type: application/zip
