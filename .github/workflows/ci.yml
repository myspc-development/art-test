name: CI
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        wp: ['6.3', '6.4', 'latest']
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: composer
      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Install JS deps
        run: npm ci
      - name: Run JS tests
        run: npm test
      - name: Install Composer deps
        run: composer install --prefer-dist --no-progress
      - name: Install WP test suite
        env:
          WP_DB_HOST: 127.0.0.1:3306
          WP_DB_USER: root
          WP_DB_PASS: ""
          WP_DB_NAME: wordpress_test
          WP_VERSION: ${{ matrix.wp }}
        run: bash bin/install-wp-tests.sh "$WP_DB_NAME" "$WP_DB_USER" "$WP_DB_PASS" "$WP_DB_HOST" "$WP_VERSION"
      - name: PHP CodeSniffer
        run: vendor/bin/phpcs --standard=phpcs.xml
      - name: PHPStan
        run: vendor/bin/phpstan analyse src includes widgets --memory-limit=512M
      - name: Run PHPUnit (with coverage)
        env:
          WP_DB_HOST: 127.0.0.1:3306
          WP_DB_USER: root
          WP_DB_PASS: ""
          WP_DB_NAME: wordpress_test
          WP_VERSION: ${{ matrix.wp }}
        run: vendor/bin/phpunit --log-junit build/junit.xml --coverage-clover build/coverage.xml
      - name: Enforce 70% coverage
        run: |
          php -r '
            $x=simplexml_load_file("build/coverage.xml");
            if(!$x){fwrite(STDERR,"No coverage.xml\n"); exit(1);}
            $m=(float)$x->project->metrics["lines-covered"];
            $n=(float)$x->project->metrics["lines-valid"];
            $pct=$n?($m/$n):0;
            echo "Coverage: ".round($pct*100,2)."%\n";
            exit($pct>=0.70?0:1);
          '
      - name: Run Playwright
        if: matrix.php == '8.2' && matrix.wp == 'latest'
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: phpunit-${{ matrix.php }}-${{ matrix.wp }}
          path: build/

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-${{ matrix.php }}-${{ matrix.wp }}
          path: |
            playwright-report/
            test-results/
